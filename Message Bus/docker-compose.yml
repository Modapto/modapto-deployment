services:
  #Kafka Server Configuration
  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-config:/etc/kafka
      - kafka-schemas:/etc/schema-registr
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    healthcheck:
      test: kafka-topics --bootstrap-server=kafka:29092 --list || exit 1
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 15s
    networks:
      - kafka
      - modapto

  # Kafka UI Component
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - ${KAFKA_UI_EXTERNAL_PORT}:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: MODAPTO Message Bus
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
      KAFKA_CLUSTERS_0_METRICS_PORT: 9101
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: ${KAFKA_UI_USERNAME}
      SPRING_SECURITY_USER_PASSWORD: ${KAFKA_UI_PASSWORD}
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
    volumes:
      - ./kafka-ui/config-single-broker.yaml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - kafka
      - modapto

  # Kafka Rest Proxy to handle HTTP Requests
  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.7.1
    restart: unless-stopped
    env_file: .env
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - ${RP_EXTERNAL_PORT}:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'
      KAFKA_REST_LISTENERS: ${RP_LISTENERS}
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:${SR_EXTERNAL_PORT}"
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
    networks:
      - kafka

  # Kafka image for Schema Registry of Messages
  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    hostname: schema-registry
    container_name: schema-registry
    env_file: .env
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "${SR_EXTERNAL_PORT}:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: ${SR_LISTENERS}
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_OPTS: -Djava.security.auth.login.config=/conf/schema_registry.jaas
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
    networks:
      - kafka
  
  # Initial Topics Setup
  kafka-setup:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka-setup
    container_name: kafka-setup
    env_file: .env
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./scripts/kafka-init-topics-single-broker.sh:/usr/local/bin/kafka-init-topics.sh
    environment:
      KAFKA_NODE_ID: 10
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT, CONTROLLER:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-setup:29092'
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-setup:29092'
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    restart: no
    command:
      - bash 
      - -c
      - | # Remove Windows carriage returns and grant execution permissions
        cp /usr/local/bin/kafka-init-topics.sh /tmp/kafka-init-topics.sh && \
        sed -i 's/\r$//' /tmp/kafka-init-topics.sh && \
        chmod +x /tmp/kafka-init-topics.sh && \
        /tmp/kafka-init-topics.sh
    networks:
      - kafka

  # Kafka Connector to support MQTT configuration
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_PRODUCER_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_CONSUMER_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_PRODUCER_SECURITY_PROTOCOL: PLAINTEXT
      CONNECT_CONSUMER_SECURITY_PROTOCOL: PLAINTEXT 
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: modapto-mqtt-connector
      CONNECT_CONFIG_STORAGE_TOPIC: modapto-kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: modapto-kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: modapto-kafka-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      CONNECT_TOPIC_CREATION_ENABLE: 'true'
      CONNECT_TOPIC_CREATION_DEFAULT_PARTITIONS: 6
      CONNECT_TOPIC_CREATION_DEFAULT_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_CONFIG_PROVIDERS: 'env'
      CONNECT_CONFIG_PROVIDERS_ENV_CLASS: 'org.apache.kafka.common.config.provider.EnvVarConfigProvider'
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
    volumes:
      - ./kafka-connect/mqtt-source-connector.json:/etc/kafka-connect/mqtt-source-connector.json
      - kafka_connect_plugins:/usr/share/confluent-hub-components
    networks:
      - kafka
    depends_on:
      kafka:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    command: 
      - bash 
      - -c 
      - |
        echo "Installing MQTT Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-mqtt:latest
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run & 
        #
        echo "Waiting for Kafka Connect to be ready..."
        while ! curl -s -f http://localhost:8083/connector-plugins > /dev/null; do
          echo "Waiting for Kafka Connect to start..."
          sleep 5
        done

        echo "Creating the MQTT connector:"
        curl -v -X POST http://localhost:8083/connectors \
          -H "Content-Type: application/json; charset=UTF-8" \
          --data-binary "@/etc/kafka-connect/mqtt-source-connector.json"
        
        sleep infinity

  # MQTT configuration
  mosquitto:
    image: eclipse-mosquitto:2.0.20
    container_name: mosquitto
    restart: unless-stopped
    env_file: .env
    environment:
      - MOSQUITTO_USERNAME=${MQTT_USER}
      - MOSQUITTO_PASSWORD=${MQTT_PASSWORD}
    volumes:
      - ./mqtt-config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    ports:
      - "1883:1883"
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 mosquitto_sub -t 'test-topic' -u ${MQTT_USER} -P ${MQTT_PASSWORD} -E -v 2>&1 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - kafka
      - modapto

networks:
  kafka:
    driver: bridge
  modapto:
    driver: bridge

volumes:
  mosquitto_data:
  mosquitto_log:
  kafka-data:
  kafka-config:
  kafka-schemas:
  kafka_connect_plugins:
